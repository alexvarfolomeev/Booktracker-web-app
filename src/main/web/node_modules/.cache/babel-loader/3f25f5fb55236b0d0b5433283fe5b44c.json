{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\web\\\\src\\\\components\\\\BookEditing.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class BookEditing extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      authorName: '',\n      bookName: '',\n      coverPicURL: '',\n      bookStatus: ''\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n      const book = {\n        authorName: this.state.authorName,\n        bookName: this.state.bookName,\n        coverPicURL: this.state.coverPicURL,\n        bookStatus: this.state.bookStatus\n      };\n      axios.post(\"http://localhost:8080/api/books/update-book\", book).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Book updated successfully!\");\n        }\n      });\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n  }\n\n  render() {\n    var _s = $RefreshSig$();\n\n    const {\n      authorName,\n      bookName,\n      coverPicURL,\n      bookStatus\n    } = this.state;\n\n    function Example() {\n      _s();\n\n      const [show, setShow] = useState(false);\n\n      const handleClose = () => setShow(false);\n\n      const handleShow = () => setShow(true);\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShow,\n          children: \"Launch demo modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Modal heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: \"Woohoo, you're reading this text in a modal!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n\n    _s(Example, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n    render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this)); // return (\n    //     <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\n    //         <Card.Header>Изменить инфо о книге</Card.Header>\n    //         <Form onSubmit={this.submitBook} id=\"bookFormId\">\n    //             <Card.Body>\n    //                 <Form.Group as={Col} controlId=\"formGridAuthor\">\n    //                     <Form.Label>Автор</Form.Label>\n    //                     <Form.Control required autoComplete=\"off\"\n    //                         type=\"text\" name=\"authorName\"\n    //                         value={authorName}\n    //                         onChange={this.bookChange}\n    //                         placeholder=\"Введите автора книги\"\n    //                         className={\"bg-dark text-white\"} />\n    //                 </Form.Group>\n    //                 <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\n    //                     <Form.Label>Название книги</Form.Label>\n    //                     <Form.Control required autoComplete=\"off\"\n    //                         type=\"text\" name=\"bookName\"\n    //                         value={bookName}\n    //                         onChange={this.bookChange}\n    //                         placeholder=\"Введите название книги\"\n    //                         className=\"bg-dark text-white\" />\n    //                 </Form.Group>\n    //                 <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\n    //                     <Form.Label>Обложка книги</Form.Label>\n    //                     <Form.Control required autoComplete=\"off\"\n    //                         type=\"text\" name=\"coverPicURL\"\n    //                         value={coverPicURL}\n    //                         onChange={this.bookChange}\n    //                         placeholder=\"Добавьте URL картинки\"\n    //                         className=\"bg-dark text-white\" />\n    //                 </Form.Group>\n    //                 <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\n    //                     <Form.Label>Статус книги</Form.Label>\n    //                     <Form.Control required autoComplete=\"off\"\n    //                         type=\"text\" name=\"bookStatus\"\n    //                         value={bookStatus}\n    //                         onChange={this.bookChange}\n    //                         placeholder=\"Выберите статус книги\"\n    //                         className=\"bg-dark text-white\" />\n    //                 </Form.Group>\n    //             </Card.Body>\n    //             <Card.Footer>\n    //                 <Button variant=\"success\" type=\"submit\">\n    //                     Сохранить\n    //                 </Button>\n    //             </Card.Footer>\n    //         </Form>\n    //     </Card>\n    // )\n  }\n\n}","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/web/src/components/BookEditing.js"],"names":["React","Component","axios","Card","Form","Button","Col","Select","BookEditing","constructor","props","initialState","authorName","bookName","coverPicURL","bookStatus","submitBook","event","preventDefault","book","state","post","then","response","data","setState","alert","bookChange","target","name","value","bind","render","Example","show","setShow","useState","handleClose","handleShow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    }\r\n\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            authorName: this.state.authorName,\r\n            bookName: this.state.bookName,\r\n            coverPicURL: this.state.coverPicURL,\r\n            bookStatus: this.state.bookStatus\r\n        };\r\n\r\n        axios.post(\"http://localhost:8080/api/books/update-book\", book)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book updated successfully!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { authorName, bookName, coverPicURL, bookStatus } = this.state;\r\n\r\n        function Example() {\r\n            const [show, setShow] = useState(false);\r\n\r\n            const handleClose = () => setShow(false);\r\n            const handleShow = () => setShow(true);\r\n\r\n            return (\r\n                <>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Launch demo modal\r\n                    </Button>\r\n\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </>\r\n            );\r\n        }\r\n\r\n        render(<Example />);\r\n    \r\n        // return (\r\n        //     <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n        //         <Card.Header>Изменить инфо о книге</Card.Header>\r\n        //         <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n        //             <Card.Body>\r\n        //                 <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n        //                     <Form.Label>Автор</Form.Label>\r\n        //                     <Form.Control required autoComplete=\"off\"\r\n        //                         type=\"text\" name=\"authorName\"\r\n        //                         value={authorName}\r\n        //                         onChange={this.bookChange}\r\n        //                         placeholder=\"Введите автора книги\"\r\n        //                         className={\"bg-dark text-white\"} />\r\n        //                 </Form.Group>\r\n        //                 <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n        //                     <Form.Label>Название книги</Form.Label>\r\n        //                     <Form.Control required autoComplete=\"off\"\r\n        //                         type=\"text\" name=\"bookName\"\r\n        //                         value={bookName}\r\n        //                         onChange={this.bookChange}\r\n        //                         placeholder=\"Введите название книги\"\r\n        //                         className=\"bg-dark text-white\" />\r\n        //                 </Form.Group>\r\n        //                 <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n        //                     <Form.Label>Обложка книги</Form.Label>\r\n        //                     <Form.Control required autoComplete=\"off\"\r\n        //                         type=\"text\" name=\"coverPicURL\"\r\n        //                         value={coverPicURL}\r\n        //                         onChange={this.bookChange}\r\n        //                         placeholder=\"Добавьте URL картинки\"\r\n        //                         className=\"bg-dark text-white\" />\r\n        //                 </Form.Group>\r\n        //                 <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n        //                     <Form.Label>Статус книги</Form.Label>\r\n        //                     <Form.Control required autoComplete=\"off\"\r\n        //                         type=\"text\" name=\"bookStatus\"\r\n        //                         value={bookStatus}\r\n        //                         onChange={this.bookChange}\r\n        //                         placeholder=\"Выберите статус книги\"\r\n        //                         className=\"bg-dark text-white\" />\r\n        //                 </Form.Group>\r\n        //             </Card.Body>\r\n        //             <Card.Footer>\r\n        //                 <Button variant=\"success\" type=\"submit\">\r\n        //                     Сохранить\r\n        //                 </Button>\r\n        //             </Card.Footer>\r\n        //         </Form>\r\n        //     </Card>\r\n        // )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}