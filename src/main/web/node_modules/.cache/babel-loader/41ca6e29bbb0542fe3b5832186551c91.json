{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\web\\\\src\\\\components\\\\BookEditing.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ApiService from \"./ApiService\";\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BookEditing extends Component {\n  //     constructor(props) {\n  //         super(props);\n  //         this.state = this.initialState;\n  //         this.bookChange = this.bookChange.bind(this);\n  //         this.submitBook = this.submitBook.bind(this);\n  //     }\n  //\n  //     initialState = {\n  //         authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\n  //     }\n  //\n  //     updateBook = (bookId) => {\n  //         axios.delete('http://localhost:8080/api/books/update-book/' + bookId)\n  //             .then(response => {\n  //                 if (response != null) {\n  //                     alert('This book was successfully updated!');\n  //                     this.setState({\n  //                         books: this.state.books.filter(book => book.id != bookId)\n  //                     });\n  //                 }\n  //             });\n  //     };\n  //\n  //     submitBook = event => {\n  //         event.preventDefault();\n  //\n  //         const book = {\n  //             bookid: this.state.bookid,\n  //             authorName: this.state.authorName,\n  //             bookName: this.state.bookName,\n  //             coverPicURL: this.state.coverPicURL,\n  //             bookStatus: this.state.bookStatus\n  //         };\n  //\n  //         axios.post(\"http://localhost:8080/api/books/update-book/id=\" + book.bookid, book)\n  //             .then(response => {\n  //                 if (response.data != null) {\n  //                     this.setState(this.initialState);\n  //                     alert(\"Book updated successfully!\");\n  //                 }\n  //             });\n  //     }\n  //\n  //     bookChange = event => {\n  //         this.setState({\n  //             [event.target.name]: event.target.value\n  //         })\n  //     }\n  //\n  //     render() {\n  //         const { authorName, bookName, coverPicURL, bookStatus } = this.state;\n  //\n  //         return (\n  //             <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\n  //                 <Card.Header>Изменить инфо о книге</Card.Header>\n  //                 <Form onSubmit={this.submitBook} id=\"bookFormId\">\n  //                     <Card.Body>\n  //                         <Form.Group as={Col} controlId=\"formGridAuthor\">\n  //                             <Form.Label>Автор</Form.Label>\n  //                             <Form.Control required autoComplete=\"off\"\n  //                                 type=\"text\" name=\"authorName\"\n  //                                 value={authorName}\n  //                                 onChange={this.bookChange}\n  //                                 placeholder=\"Введите автора книги\"\n  //                                 className={\"bg-dark text-white\"} />\n  //                         </Form.Group>\n  //                         <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\n  //                             <Form.Label>Название книги</Form.Label>\n  //                             <Form.Control required autoComplete=\"off\"\n  //                                 type=\"text\" name=\"bookName\"\n  //                                 value={bookName}\n  //                                 onChange={this.bookChange}\n  //                                 placeholder=\"Введите название книги\"\n  //                                 className=\"bg-dark text-white\" />\n  //                         </Form.Group>\n  //                         <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\n  //                             <Form.Label>Обложка книги</Form.Label>\n  //                             <Form.Control required autoComplete=\"off\"\n  //                                 type=\"text\" name=\"coverPicURL\"\n  //                                 value={coverPicURL}\n  //                                 onChange={this.bookChange}\n  //                                 placeholder=\"Добавьте URL картинки\"\n  //                                 className=\"bg-dark text-white\" />\n  //                         </Form.Group>\n  //                         <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\n  //                             <Form.Label>Статус книги</Form.Label>\n  //                             <Form.Control required autoComplete=\"off\"\n  //                                 type=\"text\" name=\"bookStatus\"\n  //                                 value={bookStatus}\n  //                                 onChange={this.bookChange}\n  //                                 placeholder=\"Выберите статус книги\"\n  //                                 className=\"bg-dark text-white\" />\n  //                         </Form.Group>\n  //                     </Card.Body>\n  //                     <Card.Footer>\n  //                         <Button variant=\"success\" type=\"submit\" onClick={this.submitBook}>\n  //                             Сохранить\n  //                         </Button>\n  //                     </Card.Footer>\n  //                 </Form>\n  //             </Card>\n  //         )\n  //     }\n  // }\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.saveUser = e => {\n      e.preventDefault();\n      let user = {\n        id: this.state.id,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        age: this.state.age,\n        salary: this.state.salary\n      };\n      ApiService.editUser(user).then(res => {\n        this.setState({\n          message: 'User added successfully.'\n        });\n        this.props.history.push('/users');\n      });\n    };\n\n    this.state = {\n      bookId: '',\n      authorName: '',\n      bookName: '',\n      coverPicURL: '',\n      bookStatus: ''\n    };\n    this.saveBook = this.saveBook.bind(this);\n    this.loadBook = this.loadBook.bind(this);\n  }\n\n  fetchUserById(bookId) {\n    return axios.get(\"http://localhost:8080/api/books/find-book-by-id\" + '/' + bookId);\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  loadUser() {\n    ApiService.fetchUserById(window.localStorage.getItem(\"userId\")).then(res => {\n      let user = res.data.result;\n      this.setState({\n        id: user.id,\n        username: user.username,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        age: user.age,\n        salary: user.salary\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"username\",\n            name: \"username\",\n            className: \"form-control\",\n            readonly: \"true\",\n            defaultValue: this.state.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"First Name\",\n            name: \"firstName\",\n            className: \"form-control\",\n            value: this.state.firstName,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Last name\",\n            name: \"lastName\",\n            className: \"form-control\",\n            value: this.state.lastName,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"age\",\n            name: \"age\",\n            className: \"form-control\",\n            value: this.state.age,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Salary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"salary\",\n            name: \"salary\",\n            className: \"form-control\",\n            value: this.state.salary,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.saveUser,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/web/src/components/BookEditing.js"],"names":["React","Component","axios","ApiService","Card","Form","Button","Col","Select","BookEditing","constructor","props","onChange","e","setState","target","name","value","saveUser","preventDefault","user","id","state","password","firstName","lastName","age","salary","editUser","then","res","message","history","push","bookId","authorName","bookName","coverPicURL","bookStatus","saveBook","bind","loadBook","fetchUserById","get","componentDidMount","loadUser","window","localStorage","getItem","data","result","username","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,MAAjC,QAA8C,iBAA9C;;AAGA,eAAe,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAEnf,UAAMA,KAAN;;AADe,SAoCnBC,QApCmB,GAoCPC,CAAD,IACP,KAAKC,QAAL,CAAc;AAAC,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,KAAd,CArCe;;AAAA,SAuCnBC,QAvCmB,GAuCPL,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,UAAIC,IAAI,GAAG;AACPC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD,EADR;AAEPE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFd;AAGPC,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAHf;AAIPC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAJd;AAKPC,QAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI,GALT;AAMPC,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK;AANZ,OAAX;AAQAxB,MAAAA,UAAU,CAACyB,QAAX,CAAoBR,IAApB,EACKS,IADL,CACUC,GAAG,IAAI;AACT,aAAKhB,QAAL,CAAc;AAACiB,UAAAA,OAAO,EAAE;AAAV,SAAd;AACA,aAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OAJL;AAKH,KAtDkB;;AAEf,SAAKX,KAAL,GAAa;AACTY,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,UAAU,EAAE;AALH,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,aAAa,CAACR,MAAD,EAAS;AAClB,WAAOhC,KAAK,CAACyC,GAAN,CAAU,oDAAmD,GAAnD,GAAyDT,MAAnE,CAAP;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL;AACH;;AAEDA,EAAAA,QAAQ,GAAG;AACP1C,IAAAA,UAAU,CAACuC,aAAX,CAAyBI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAAzB,EACKnB,IADL,CACWC,GAAD,IAAS;AACX,UAAIV,IAAI,GAAGU,GAAG,CAACmB,IAAJ,CAASC,MAApB;AACA,WAAKpC,QAAL,CAAc;AACVO,QAAAA,EAAE,EAAED,IAAI,CAACC,EADC;AAEV8B,QAAAA,QAAQ,EAAE/B,IAAI,CAAC+B,QAFL;AAGV3B,QAAAA,SAAS,EAAEJ,IAAI,CAACI,SAHN;AAIVC,QAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJL;AAKVC,QAAAA,GAAG,EAAEN,IAAI,CAACM,GALA;AAMVC,QAAAA,MAAM,EAAEP,IAAI,CAACO;AANH,OAAd;AAQH,KAXL;AAYH;;AAsBDyB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,UAA/B;AAA0C,YAAA,IAAI,EAAC,UAA/C;AAA0D,YAAA,SAAS,EAAC,cAApE;AACO,YAAA,QAAQ,EAAC,MADhB;AACuB,YAAA,YAAY,EAAE,KAAK9B,KAAL,CAAW6B;AADhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,WAAW,EAAC,YAAnB;AAAgC,YAAA,IAAI,EAAC,WAArC;AAAiD,YAAA,SAAS,EAAC,cAA3D;AACO,YAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWE,SADzB;AACoC,YAAA,QAAQ,EAAE,KAAKZ;AADnD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,WAAW,EAAC,WAAnB;AAA+B,YAAA,IAAI,EAAC,UAApC;AAA+C,YAAA,SAAS,EAAC,cAAzD;AACO,YAAA,KAAK,EAAE,KAAKU,KAAL,CAAWG,QADzB;AACmC,YAAA,QAAQ,EAAE,KAAKb;AADlD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAoBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,KAAjC;AAAuC,YAAA,IAAI,EAAC,KAA5C;AAAkD,YAAA,SAAS,EAAC,cAA5D;AACO,YAAA,KAAK,EAAE,KAAKU,KAAL,CAAWI,GADzB;AAC8B,YAAA,QAAQ,EAAE,KAAKd;AAD7C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eA0BI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,QAAjC;AAA0C,YAAA,IAAI,EAAC,QAA/C;AAAwD,YAAA,SAAS,EAAC,cAAlE;AACO,YAAA,KAAK,EAAE,KAAKU,KAAL,CAAWK,MADzB;AACiC,YAAA,QAAQ,EAAE,KAAKf;AADhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eAgCI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKM,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuCH;;AA3M8C","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ApiService from \"./ApiService\";\r\nimport {Card, Form, Button, Col, Select} from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = this.initialState;\r\n//         this.bookChange = this.bookChange.bind(this);\r\n//         this.submitBook = this.submitBook.bind(this);\r\n//     }\r\n//\r\n//     initialState = {\r\n//         authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n//     }\r\n//\r\n//     updateBook = (bookId) => {\r\n//         axios.delete('http://localhost:8080/api/books/update-book/' + bookId)\r\n//             .then(response => {\r\n//                 if (response != null) {\r\n//                     alert('This book was successfully updated!');\r\n//                     this.setState({\r\n//                         books: this.state.books.filter(book => book.id != bookId)\r\n//                     });\r\n//                 }\r\n//             });\r\n//     };\r\n//\r\n//     submitBook = event => {\r\n//         event.preventDefault();\r\n//\r\n//         const book = {\r\n//             bookid: this.state.bookid,\r\n//             authorName: this.state.authorName,\r\n//             bookName: this.state.bookName,\r\n//             coverPicURL: this.state.coverPicURL,\r\n//             bookStatus: this.state.bookStatus\r\n//         };\r\n//\r\n//         axios.post(\"http://localhost:8080/api/books/update-book/id=\" + book.bookid, book)\r\n//             .then(response => {\r\n//                 if (response.data != null) {\r\n//                     this.setState(this.initialState);\r\n//                     alert(\"Book updated successfully!\");\r\n//                 }\r\n//             });\r\n//     }\r\n//\r\n//     bookChange = event => {\r\n//         this.setState({\r\n//             [event.target.name]: event.target.value\r\n//         })\r\n//     }\r\n//\r\n//     render() {\r\n//         const { authorName, bookName, coverPicURL, bookStatus } = this.state;\r\n//\r\n//         return (\r\n//             <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n//                 <Card.Header>Изменить инфо о книге</Card.Header>\r\n//                 <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n//                     <Card.Body>\r\n//                         <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n//                             <Form.Label>Автор</Form.Label>\r\n//                             <Form.Control required autoComplete=\"off\"\r\n//                                 type=\"text\" name=\"authorName\"\r\n//                                 value={authorName}\r\n//                                 onChange={this.bookChange}\r\n//                                 placeholder=\"Введите автора книги\"\r\n//                                 className={\"bg-dark text-white\"} />\r\n//                         </Form.Group>\r\n//                         <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n//                             <Form.Label>Название книги</Form.Label>\r\n//                             <Form.Control required autoComplete=\"off\"\r\n//                                 type=\"text\" name=\"bookName\"\r\n//                                 value={bookName}\r\n//                                 onChange={this.bookChange}\r\n//                                 placeholder=\"Введите название книги\"\r\n//                                 className=\"bg-dark text-white\" />\r\n//                         </Form.Group>\r\n//                         <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n//                             <Form.Label>Обложка книги</Form.Label>\r\n//                             <Form.Control required autoComplete=\"off\"\r\n//                                 type=\"text\" name=\"coverPicURL\"\r\n//                                 value={coverPicURL}\r\n//                                 onChange={this.bookChange}\r\n//                                 placeholder=\"Добавьте URL картинки\"\r\n//                                 className=\"bg-dark text-white\" />\r\n//                         </Form.Group>\r\n//                         <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n//                             <Form.Label>Статус книги</Form.Label>\r\n//                             <Form.Control required autoComplete=\"off\"\r\n//                                 type=\"text\" name=\"bookStatus\"\r\n//                                 value={bookStatus}\r\n//                                 onChange={this.bookChange}\r\n//                                 placeholder=\"Выберите статус книги\"\r\n//                                 className=\"bg-dark text-white\" />\r\n//                         </Form.Group>\r\n//                     </Card.Body>\r\n//                     <Card.Footer>\r\n//                         <Button variant=\"success\" type=\"submit\" onClick={this.submitBook}>\r\n//                             Сохранить\r\n//                         </Button>\r\n//                     </Card.Footer>\r\n//                 </Form>\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookId: '',\r\n            authorName: '',\r\n            bookName: '',\r\n            coverPicURL: '',\r\n            bookStatus: ''\r\n        }\r\n        this.saveBook = this.saveBook.bind(this);\r\n        this.loadBook = this.loadBook.bind(this);\r\n    }\r\n\r\n    fetchUserById(bookId) {\r\n        return axios.get(\"http://localhost:8080/api/books/find-book-by-id\"+ '/' + bookId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    loadUser() {\r\n        ApiService.fetchUserById(window.localStorage.getItem(\"userId\"))\r\n            .then((res) => {\r\n                let user = res.data.result;\r\n                this.setState({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    age: user.age,\r\n                    salary: user.salary,\r\n                })\r\n            });\r\n    }\r\n\r\n    onChange = (e) =>\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n        let user = {\r\n            id: this.state.id,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            age: this.state.age,\r\n            salary: this.state.salary\r\n        };\r\n        ApiService.editUser(user)\r\n            .then(res => {\r\n                this.setState({message: 'User added successfully.'});\r\n                this.props.history.push('/users');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Edit User</h2>\r\n                <form>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>User Name:</label>\r\n                        <input type=\"text\" placeholder=\"username\" name=\"username\" className=\"form-control\"\r\n                               readonly=\"true\" defaultValue={this.state.username}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>First Name:</label>\r\n                        <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                               value={this.state.firstName} onChange={this.onChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name:</label>\r\n                        <input placeholder=\"Last name\" name=\"lastName\" className=\"form-control\"\r\n                               value={this.state.lastName} onChange={this.onChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Age:</label>\r\n                        <input type=\"number\" placeholder=\"age\" name=\"age\" className=\"form-control\"\r\n                               value={this.state.age} onChange={this.onChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Salary:</label>\r\n                        <input type=\"number\" placeholder=\"salary\" name=\"salary\" className=\"form-control\"\r\n                               value={this.state.salary} onChange={this.onChange}/>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-success\" onClick={this.saveUser}>Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}