{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\web\\\\src\\\\components\\\\BookEditing.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ApiService from \"./ApiService\";\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BookEditing extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      bookId: '',\n      authorName: '',\n      bookName: '',\n      coverPicURL: '',\n      bookStatus: ''\n    };\n\n    this.findById = bookId => {\n      axios.get(\"http://localhost:8080/api/books/find-book-by-id/\" + bookId).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            authorName: response.data.authorName,\n            bookName: response.data.bookName,\n            coverPicURL: response.data.coverPicURL,\n            bookStatus: response.data.bookStatus\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error - \" + error);\n      });\n    };\n\n    this.updateBook = event => {\n      event.preventDefault();\n      const book = {\n        id: this.state.id,\n        authorName: this.state.authorName,\n        bookName: this.state.bookName,\n        coverPicURL: this.state.coverPicURL,\n        bookStatus: this.state.bookStatus\n      };\n      axios.put(\"http://localhost:8080/api/books/update-book/id=\" + book.id, book).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Book updated successfully!\");\n          this.props.history.push('/show-all');\n        }\n      });\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.updateBook = this.updateBook.bind(this);\n  }\n\n  // updateBook = (bookId) => {\n  //     axios.delete('http://localhost:8080/api/books/update-book/' + bookId)\n  //         .then(response => {\n  //             if (response != null) {\n  //                 alert('This book was successfully updated!');\n  //                 this.setState({\n  //                     books: this.state.books.filter(book => book.id != bookId)\n  //                 });\n  //             }\n  //         });\n  // };\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n\n    if (bookId) {\n      this.findById(bookId);\n    }\n  }\n\n  render() {\n    const {\n      authorName,\n      bookName,\n      coverPicURL,\n      bookStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"bordered border-dark bg-dark text-white\",\n      style: {\n        marginTop: 50,\n        marginBottom: 50,\n        marginLeft: 50,\n        marginRight: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E \\u043E \\u043A\\u043D\\u0438\\u0433\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.updateBook,\n        id: \"bookFormId\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridAuthor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"authorName\",\n              value: authorName,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridTitle\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"bookName\",\n              value: bookName,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCover\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0430 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"coverPicURL\",\n              value: coverPicURL,\n              onChange: this.bookChange,\n              placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 URL \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridStatus\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"bookStatus\",\n              value: bookStatus,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n} //     constructor(props) {\n//         super(props);\n//         this.state = {\n//             bookId: '',\n//             authorName: '',\n//             bookName: '',\n//             coverPicURL: '',\n//             bookStatus: ''\n//         }\n//         this.saveBook = this.saveBook.bind(this);\n//         this.loadBook = this.loadBook.bind(this);\n//     }\n//\n//     fetchUserById(bookId) {\n//         return axios.get(\"http://localhost:8080/api/books/find-book-by-id\"+ '/' + bookId);\n//     }\n//\n//     componentDidMount() {\n//         this.loadBook();\n//     }\n//\n//     loadBook() {\n//         ApiService.fetchUserById(window.localStorage.getItem(\"bookId\"))\n//             .then((res) => {\n//                 let book = res.data.result;\n//                 this.setState({\n//                     bookId: book.id,\n//                     authorName: book.authorName,\n//                     bookName: book.bookName,\n//                     coverPicURL: book.coverPicURL,\n//                     bookStatus: book.bookStatus,\n//                 })\n//             });\n//     }\n//\n//     onChange = (e) =>\n//         this.setState({[e.target.name]: e.target.value});\n//\n//     saveBook = (e) => {\n//         e.preventDefault();\n//         let book = {\n//             bookId: this.state.bookId,\n//             authorName: this.state.authorName,\n//             bookName: this.state.bookName,\n//             coverPicURL: this.state.coverPicURL,\n//             bookStatus: this.state.bookStatus,\n//         };\n//\n//         ApiService.editBook(book)\n//             .then(res => {\n//                 this.setState({message: 'Book updated successfully.'});\n//                 this.props.history.push('/show-all');\n//             });\n//     }\n//\n//     render() {\n//         return (\n//             <div>\n//                 <h2 className=\"text-center\">Edit User</h2>\n//                 <form>\n//\n//                     <div className=\"form-group\">\n//                         <label>Book id</label>\n//                         <input type=\"text\" placeholder=\"bookId\" name=\"bookId\" className=\"form-control\"\n//                                readonly=\"true\" defaultValue={this.state.bookId}/>\n//                     </div>\n//\n//                     <div className=\"form-group\">\n//                         <label>Автор</label>\n//                         <input placeholder=\"authorName\" name=\"authorName\" className=\"form-control\"\n//                                value={this.state.authorName} onChange={this.onChange}/>\n//                     </div>\n//\n//                     <div className=\"form-group\">\n//                         <label>Название книги</label>\n//                         <input placeholder=\"bookName\" name=\"bookName\" className=\"form-control\"\n//                                value={this.state.bookName} onChange={this.onChange}/>\n//                     </div>\n//\n//                     <div className=\"form-group\">\n//                         <label>Age:</label>\n//                         <input placeholder=\"coverPicURL\" name=\"coverPicURL\" className=\"form-control\"\n//                                value={this.state.coverPicURL} onChange={this.onChange}/>\n//                     </div>\n//\n//                     <div className=\"form-group\">\n//                         <label>Salary:</label>\n//                         <input placeholder=\"bookStatus\" name=\"bookStatus\" className=\"form-control\"\n//                                value={this.state.bookStatus} onChange={this.onChange}/>\n//                     </div>\n//                         <button className=\"btn btn-success\" onClick={this.saveBook}>Сохранить</button>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/web/src/components/BookEditing.js"],"names":["React","Component","axios","ApiService","Card","Form","Button","Col","Select","BookEditing","constructor","props","initialState","bookId","authorName","bookName","coverPicURL","bookStatus","findById","get","then","response","data","setState","id","catch","error","console","updateBook","event","preventDefault","book","state","put","alert","history","push","bookChange","target","name","value","bind","componentDidMount","match","params","render","marginTop","marginBottom","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ApiService from \"./ApiService\";\r\nimport {Card, Form, Button, Col, Select} from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.updateBook = this.updateBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        bookId: '', authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    }\r\n\r\n    // updateBook = (bookId) => {\r\n    //     axios.delete('http://localhost:8080/api/books/update-book/' + bookId)\r\n    //         .then(response => {\r\n    //             if (response != null) {\r\n    //                 alert('This book was successfully updated!');\r\n    //                 this.setState({\r\n    //                     books: this.state.books.filter(book => book.id != bookId)\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    // };\r\n\r\n    componentDidMount() {\r\n        const bookId = +this.props.match.params.id;\r\n        if (bookId) {\r\n            this.findById(bookId);\r\n        }\r\n    }\r\n\r\n    findById = (bookId) => {\r\n        axios.get(\"http://localhost:8080/api/books/find-book-by-id/\" + bookId)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        authorName: response.data.authorName,\r\n                        bookName: response.data.bookName,\r\n                        coverPicURL: response.data.coverPicURL,\r\n                        bookStatus: response.data.bookStatus\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error - \" + error);\r\n        });\r\n    }\r\n\r\n\r\n    updateBook = event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            id: this.state.id,\r\n            authorName: this.state.authorName,\r\n            bookName: this.state.bookName,\r\n            coverPicURL: this.state.coverPicURL,\r\n            bookStatus: this.state.bookStatus\r\n        };\r\n\r\n        axios.put(\"http://localhost:8080/api/books/update-book/id=\" + book.id, book)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book updated successfully!\");\r\n                    this.props.history.push('/show-all');\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {authorName, bookName, coverPicURL, bookStatus} = this.state;\r\n\r\n        return (\r\n            <Card className={\"bordered border-dark bg-dark text-white\"}\r\n                  style={{marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50}}>\r\n                <Card.Header>Изменить инфо о книге</Card.Header>\r\n                <Form onSubmit={this.updateBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n                        <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                            <Form.Label>Автор</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"authorName\"\r\n                                          value={authorName}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Введите автора книги\"\r\n                                          className={\"bg-dark text-white\"}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTitle\" style={{marginTop: 10}}>\r\n                            <Form.Label>Название книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"bookName\"\r\n                                          value={bookName}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Введите название книги\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridCover\" style={{marginTop: 10}}>\r\n                            <Form.Label>Обложка книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"coverPicURL\"\r\n                                          value={coverPicURL}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Добавьте URL картинки\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridStatus\" style={{marginTop: 10}}>\r\n                            <Form.Label>Статус книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"bookStatus\"\r\n                                          value={bookStatus}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Выберите статус книги\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             bookId: '',\r\n//             authorName: '',\r\n//             bookName: '',\r\n//             coverPicURL: '',\r\n//             bookStatus: ''\r\n//         }\r\n//         this.saveBook = this.saveBook.bind(this);\r\n//         this.loadBook = this.loadBook.bind(this);\r\n//     }\r\n//\r\n//     fetchUserById(bookId) {\r\n//         return axios.get(\"http://localhost:8080/api/books/find-book-by-id\"+ '/' + bookId);\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.loadBook();\r\n//     }\r\n//\r\n//     loadBook() {\r\n//         ApiService.fetchUserById(window.localStorage.getItem(\"bookId\"))\r\n//             .then((res) => {\r\n//                 let book = res.data.result;\r\n//                 this.setState({\r\n//                     bookId: book.id,\r\n//                     authorName: book.authorName,\r\n//                     bookName: book.bookName,\r\n//                     coverPicURL: book.coverPicURL,\r\n//                     bookStatus: book.bookStatus,\r\n//                 })\r\n//             });\r\n//     }\r\n//\r\n//     onChange = (e) =>\r\n//         this.setState({[e.target.name]: e.target.value});\r\n//\r\n//     saveBook = (e) => {\r\n//         e.preventDefault();\r\n//         let book = {\r\n//             bookId: this.state.bookId,\r\n//             authorName: this.state.authorName,\r\n//             bookName: this.state.bookName,\r\n//             coverPicURL: this.state.coverPicURL,\r\n//             bookStatus: this.state.bookStatus,\r\n//         };\r\n//\r\n//         ApiService.editBook(book)\r\n//             .then(res => {\r\n//                 this.setState({message: 'Book updated successfully.'});\r\n//                 this.props.history.push('/show-all');\r\n//             });\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h2 className=\"text-center\">Edit User</h2>\r\n//                 <form>\r\n//\r\n//                     <div className=\"form-group\">\r\n//                         <label>Book id</label>\r\n//                         <input type=\"text\" placeholder=\"bookId\" name=\"bookId\" className=\"form-control\"\r\n//                                readonly=\"true\" defaultValue={this.state.bookId}/>\r\n//                     </div>\r\n//\r\n//                     <div className=\"form-group\">\r\n//                         <label>Автор</label>\r\n//                         <input placeholder=\"authorName\" name=\"authorName\" className=\"form-control\"\r\n//                                value={this.state.authorName} onChange={this.onChange}/>\r\n//                     </div>\r\n//\r\n//                     <div className=\"form-group\">\r\n//                         <label>Название книги</label>\r\n//                         <input placeholder=\"bookName\" name=\"bookName\" className=\"form-control\"\r\n//                                value={this.state.bookName} onChange={this.onChange}/>\r\n//                     </div>\r\n//\r\n//                     <div className=\"form-group\">\r\n//                         <label>Age:</label>\r\n//                         <input placeholder=\"coverPicURL\" name=\"coverPicURL\" className=\"form-control\"\r\n//                                value={this.state.coverPicURL} onChange={this.onChange}/>\r\n//                     </div>\r\n//\r\n//                     <div className=\"form-group\">\r\n//                         <label>Salary:</label>\r\n//                         <input placeholder=\"bookStatus\" name=\"bookStatus\" className=\"form-control\"\r\n//                                value={this.state.bookStatus} onChange={this.onChange}/>\r\n//                     </div>\r\n//                         <button className=\"btn btn-success\" onClick={this.saveBook}>Сохранить</button>\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}