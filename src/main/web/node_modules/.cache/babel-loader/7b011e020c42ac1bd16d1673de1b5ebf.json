{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\web\\\\src\\\\components\\\\BookEditing.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button, Col, Select, Modal, ModalBody, ModalFooter } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BookEditing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      name: '',\n      team: '',\n      country: ''\n    };\n    this.toggle = this.toggle.bind(this);\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeTeam = this.handleChangeTeam.bind(this);\n    this.handleChangeCountry = this.handleChangeCountry.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleChangeTeam(event) {\n    this.setState({\n      team: event.target.value\n    });\n  }\n\n  handleChangeCountry(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Bootstrap Modal Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: this.toggle,\n        children: \"React Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.name,\n                  onChange: this.handleChangeName,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Team:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.team,\n                  onChange: this.handleChangeTeam,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Country:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.country,\n                  onChange: this.handleChangeCountry,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\",\n              color: \"primary\",\n              className: \"btn btn-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              onClick: this.toggle,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } // constructor(props) {\n  //     super(props);\n  //     this.state = this.initialState;\n  //     this.bookChange = this.bookChange.bind(this);\n  //     this.submitBook = this.submitBook.bind(this);\n  // }\n  //\n  // initialState = {\n  //     authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\n  // }\n  //\n  // submitBook = event => {\n  //     event.preventDefault();\n  //\n  //     const book = {\n  //         authorName: this.state.authorName,\n  //         bookName: this.state.bookName,\n  //         coverPicURL: this.state.coverPicURL,\n  //         bookStatus: this.state.bookStatus\n  //     };\n  //\n  //     axios.post(\"http://localhost:8080/api/books/update-book\", book)\n  //         .then(response => {\n  //             if (response.data != null) {\n  //                 this.setState(this.initialState);\n  //                 alert(\"Book updated successfully!\");\n  //             }\n  //         });\n  // }\n  //\n  // bookChange = event => {\n  //     this.setState({\n  //         [event.target.name]: event.target.value\n  //     })\n  //\n  // }\n  //\n  // render() {\n  //     const { authorName, bookName, coverPicURL, bookStatus } = this.state;\n  //\n  //     return (\n  //         <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\n  //             <Card.Header>Изменить инфо о книге</Card.Header>\n  //             <Form onSubmit={this.submitBook} id=\"bookFormId\">\n  //                 <Card.Body>\n  //                     <Form.Group as={Col} controlId=\"formGridAuthor\">\n  //                         <Form.Label>Автор</Form.Label>\n  //                         <Form.Control required autoComplete=\"off\"\n  //                             type=\"text\" name=\"authorName\"\n  //                             value={authorName}\n  //                             onChange={this.bookChange}\n  //                             placeholder=\"Введите автора книги\"\n  //                             className={\"bg-dark text-white\"} />\n  //                     </Form.Group>\n  //                     <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\n  //                         <Form.Label>Название книги</Form.Label>\n  //                         <Form.Control required autoComplete=\"off\"\n  //                             type=\"text\" name=\"bookName\"\n  //                             value={bookName}\n  //                             onChange={this.bookChange}\n  //                             placeholder=\"Введите название книги\"\n  //                             className=\"bg-dark text-white\" />\n  //                     </Form.Group>\n  //                     <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\n  //                         <Form.Label>Обложка книги</Form.Label>\n  //                         <Form.Control required autoComplete=\"off\"\n  //                             type=\"text\" name=\"coverPicURL\"\n  //                             value={coverPicURL}\n  //                             onChange={this.bookChange}\n  //                             placeholder=\"Добавьте URL картинки\"\n  //                             className=\"bg-dark text-white\" />\n  //                     </Form.Group>\n  //                     <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\n  //                         <Form.Label>Статус книги</Form.Label>\n  //                         <Form.Control required autoComplete=\"off\"\n  //                             type=\"text\" name=\"bookStatus\"\n  //                             value={bookStatus}\n  //                             onChange={this.bookChange}\n  //                             placeholder=\"Выберите статус книги\"\n  //                             className=\"bg-dark text-white\" />\n  //                     </Form.Group>\n  //                 </Card.Body>\n  //                 <Card.Footer>\n  //                     <Button variant=\"success\" type=\"submit\">\n  //                         Сохранить\n  //                     </Button>\n  //                 </Card.Footer>\n  //             </Form>\n  //         </Card>\n  //     )\n  // }\n\n\n}","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/web/src/components/BookEditing.js"],"names":["React","Component","axios","Card","Form","Button","Col","Select","Modal","ModalBody","ModalFooter","BookEditing","constructor","props","state","modal","name","team","country","toggle","bind","handleChangeName","handleChangeTeam","handleChangeCountry","handleSubmit","setState","event","target","value","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Form, Button, Col, Select, Modal, ModalBody, ModalFooter } from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modal: false,name: '',team :'' ,country: ''};\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.handleChangeTeam = this.handleChangeTeam.bind(this);\r\n        this.handleChangeCountry = this.handleChangeCountry.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    handleChangeName(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    handleChangeTeam(event) {\r\n        this.setState({team: event.target.value});\r\n    }\r\n    handleChangeCountry(event) {\r\n        this.setState({country: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>React Bootstrap Modal Example</h1>\r\n                <Button color=\"success\" onClick={this.toggle}>React Modal</Button>\r\n                <Modal isOpen={this.state.modal}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <ModalBody>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" value={this.state.name} onChange={this.handleChangeName} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label>Team:</label>\r\n                                    <input type=\"text\" value={this.state.team} onChange={this.handleChangeTeam} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label>Country:</label>\r\n                                    <input type=\"text\" value={this.country} onChange={this.handleChangeCountry} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <input type=\"submit\" value=\"Submit\" color=\"primary\" className=\"btn btn-primary\" />\r\n                            <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = this.initialState;\r\n    //     this.bookChange = this.bookChange.bind(this);\r\n    //     this.submitBook = this.submitBook.bind(this);\r\n    // }\r\n    //\r\n    // initialState = {\r\n    //     authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    // }\r\n    //\r\n    // submitBook = event => {\r\n    //     event.preventDefault();\r\n    //\r\n    //     const book = {\r\n    //         authorName: this.state.authorName,\r\n    //         bookName: this.state.bookName,\r\n    //         coverPicURL: this.state.coverPicURL,\r\n    //         bookStatus: this.state.bookStatus\r\n    //     };\r\n    //\r\n    //     axios.post(\"http://localhost:8080/api/books/update-book\", book)\r\n    //         .then(response => {\r\n    //             if (response.data != null) {\r\n    //                 this.setState(this.initialState);\r\n    //                 alert(\"Book updated successfully!\");\r\n    //             }\r\n    //         });\r\n    // }\r\n    //\r\n    // bookChange = event => {\r\n    //     this.setState({\r\n    //         [event.target.name]: event.target.value\r\n    //     })\r\n    //\r\n    // }\r\n    //\r\n    // render() {\r\n    //     const { authorName, bookName, coverPicURL, bookStatus } = this.state;\r\n    //\r\n    //     return (\r\n    //         <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n    //             <Card.Header>Изменить инфо о книге</Card.Header>\r\n    //             <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n    //                 <Card.Body>\r\n    //                     <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n    //                         <Form.Label>Автор</Form.Label>\r\n    //                         <Form.Control required autoComplete=\"off\"\r\n    //                             type=\"text\" name=\"authorName\"\r\n    //                             value={authorName}\r\n    //                             onChange={this.bookChange}\r\n    //                             placeholder=\"Введите автора книги\"\r\n    //                             className={\"bg-dark text-white\"} />\r\n    //                     </Form.Group>\r\n    //                     <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n    //                         <Form.Label>Название книги</Form.Label>\r\n    //                         <Form.Control required autoComplete=\"off\"\r\n    //                             type=\"text\" name=\"bookName\"\r\n    //                             value={bookName}\r\n    //                             onChange={this.bookChange}\r\n    //                             placeholder=\"Введите название книги\"\r\n    //                             className=\"bg-dark text-white\" />\r\n    //                     </Form.Group>\r\n    //                     <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n    //                         <Form.Label>Обложка книги</Form.Label>\r\n    //                         <Form.Control required autoComplete=\"off\"\r\n    //                             type=\"text\" name=\"coverPicURL\"\r\n    //                             value={coverPicURL}\r\n    //                             onChange={this.bookChange}\r\n    //                             placeholder=\"Добавьте URL картинки\"\r\n    //                             className=\"bg-dark text-white\" />\r\n    //                     </Form.Group>\r\n    //                     <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n    //                         <Form.Label>Статус книги</Form.Label>\r\n    //                         <Form.Control required autoComplete=\"off\"\r\n    //                             type=\"text\" name=\"bookStatus\"\r\n    //                             value={bookStatus}\r\n    //                             onChange={this.bookChange}\r\n    //                             placeholder=\"Выберите статус книги\"\r\n    //                             className=\"bg-dark text-white\" />\r\n    //                     </Form.Group>\r\n    //                 </Card.Body>\r\n    //                 <Card.Footer>\r\n    //                     <Button variant=\"success\" type=\"submit\">\r\n    //                         Сохранить\r\n    //                     </Button>\r\n    //                 </Card.Footer>\r\n    //             </Form>\r\n    //         </Card>\r\n    //     )\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module"}