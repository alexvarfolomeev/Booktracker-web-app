{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\web\\\\src\\\\components\\\\BookEditing.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button, Col, Select, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class BookEditing extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      authorName: '',\n      bookName: '',\n      coverPicURL: '',\n      bookStatus: ''\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n      const book = {\n        authorName: this.state.authorName,\n        bookName: this.state.bookName,\n        coverPicURL: this.state.coverPicURL,\n        bookStatus: this.state.bookStatus\n      };\n      axios.post(\"http://localhost:8080/api/books/update-book\", book).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Book updated successfully!\");\n        }\n      });\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n  }\n\n  render() {\n    const {\n      authorName,\n      bookName,\n      coverPicURL,\n      bookStatus\n    } = this.state;\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShow,\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridAuthor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"authorName\",\n              value: authorName,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridTitle\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"bookName\",\n              value: bookName,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCover\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0430 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"coverPicURL\",\n              value: coverPicURL,\n              onChange: this.bookChange,\n              placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 URL \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridStatus\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"bookStatus\",\n              value: bookStatus,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.submitBook,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } // return (\n  //     <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\n  //         <Card.Header>Изменить инфо о книге</Card.Header>\n  //         <Form onSubmit={this.submitBook} id=\"bookFormId\">\n  //             <Card.Body>\n  //                 <Form.Group as={Col} controlId=\"formGridAuthor\">\n  //                     <Form.Label>Автор</Form.Label>\n  //                     <Form.Control required autoComplete=\"off\"\n  //                         type=\"text\" name=\"authorName\"\n  //                         value={authorName}\n  //                         onChange={this.bookChange}\n  //                         placeholder=\"Введите автора книги\"\n  //                         className={\"bg-dark text-white\"} />\n  //                 </Form.Group>\n  //                 <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\n  //                     <Form.Label>Название книги</Form.Label>\n  //                     <Form.Control required autoComplete=\"off\"\n  //                         type=\"text\" name=\"bookName\"\n  //                         value={bookName}\n  //                         onChange={this.bookChange}\n  //                         placeholder=\"Введите название книги\"\n  //                         className=\"bg-dark text-white\" />\n  //                 </Form.Group>\n  //                 <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\n  //                     <Form.Label>Обложка книги</Form.Label>\n  //                     <Form.Control required autoComplete=\"off\"\n  //                         type=\"text\" name=\"coverPicURL\"\n  //                         value={coverPicURL}\n  //                         onChange={this.bookChange}\n  //                         placeholder=\"Добавьте URL картинки\"\n  //                         className=\"bg-dark text-white\" />\n  //                 </Form.Group>\n  //                 <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\n  //                     <Form.Label>Статус книги</Form.Label>\n  //                     <Form.Control required autoComplete=\"off\"\n  //                         type=\"text\" name=\"bookStatus\"\n  //                         value={bookStatus}\n  //                         onChange={this.bookChange}\n  //                         placeholder=\"Выберите статус книги\"\n  //                         className=\"bg-dark text-white\" />\n  //                 </Form.Group>\n  //             </Card.Body>\n  //             <Card.Footer>\n  //                 <Button variant=\"success\" type=\"submit\">\n  //                     Сохранить\n  //                 </Button>\n  //             </Card.Footer>\n  //         </Form>\n  //     </Card>\n  // )\n\n\n}","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/web/src/components/BookEditing.js"],"names":["React","Component","axios","Card","Form","Button","Col","Select","Modal","BookEditing","constructor","props","initialState","authorName","bookName","coverPicURL","bookStatus","submitBook","event","preventDefault","book","state","post","then","response","data","setState","alert","bookChange","target","name","value","bind","render","handleClose","setShow","handleShow","show","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Card, Form, Button, Col, Select, Modal} from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    }\r\n\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            authorName: this.state.authorName,\r\n            bookName: this.state.bookName,\r\n            coverPicURL: this.state.coverPicURL,\r\n            bookStatus: this.state.bookStatus\r\n        };\r\n\r\n        axios.post(\"http://localhost:8080/api/books/update-book\", book)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book updated successfully!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {authorName, bookName, coverPicURL, bookStatus} = this.state;\r\n\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n\r\n        return (\r\n            <>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Launch demo modal\r\n                </Button>\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                            <Form.Label>Автор</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"authorName\"\r\n                                          value={authorName}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Введите автора книги\"\r\n                                          className={\"bg-dark text-white\"}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTitle\" style={{marginTop: 10}}>\r\n                            <Form.Label>Название книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"bookName\"\r\n                                          value={bookName}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Введите название книги\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridCover\" style={{marginTop: 10}}>\r\n                            <Form.Label>Обложка книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"coverPicURL\"\r\n                                          value={coverPicURL}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Добавьте URL картинки\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridStatus\" style={{marginTop: 10}}>\r\n                            <Form.Label>Статус книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                          type=\"text\" name=\"bookStatus\"\r\n                                          value={bookStatus}\r\n                                          onChange={this.bookChange}\r\n                                          placeholder=\"Выберите статус книги\"\r\n                                          className=\"bg-dark text-white\"/>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.submitBook}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // return (\r\n    //     <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n    //         <Card.Header>Изменить инфо о книге</Card.Header>\r\n    //         <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n    //             <Card.Body>\r\n    //                 <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n    //                     <Form.Label>Автор</Form.Label>\r\n    //                     <Form.Control required autoComplete=\"off\"\r\n    //                         type=\"text\" name=\"authorName\"\r\n    //                         value={authorName}\r\n    //                         onChange={this.bookChange}\r\n    //                         placeholder=\"Введите автора книги\"\r\n    //                         className={\"bg-dark text-white\"} />\r\n    //                 </Form.Group>\r\n    //                 <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n    //                     <Form.Label>Название книги</Form.Label>\r\n    //                     <Form.Control required autoComplete=\"off\"\r\n    //                         type=\"text\" name=\"bookName\"\r\n    //                         value={bookName}\r\n    //                         onChange={this.bookChange}\r\n    //                         placeholder=\"Введите название книги\"\r\n    //                         className=\"bg-dark text-white\" />\r\n    //                 </Form.Group>\r\n    //                 <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n    //                     <Form.Label>Обложка книги</Form.Label>\r\n    //                     <Form.Control required autoComplete=\"off\"\r\n    //                         type=\"text\" name=\"coverPicURL\"\r\n    //                         value={coverPicURL}\r\n    //                         onChange={this.bookChange}\r\n    //                         placeholder=\"Добавьте URL картинки\"\r\n    //                         className=\"bg-dark text-white\" />\r\n    //                 </Form.Group>\r\n    //                 <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n    //                     <Form.Label>Статус книги</Form.Label>\r\n    //                     <Form.Control required autoComplete=\"off\"\r\n    //                         type=\"text\" name=\"bookStatus\"\r\n    //                         value={bookStatus}\r\n    //                         onChange={this.bookChange}\r\n    //                         placeholder=\"Выберите статус книги\"\r\n    //                         className=\"bg-dark text-white\" />\r\n    //                 </Form.Group>\r\n    //             </Card.Body>\r\n    //             <Card.Footer>\r\n    //                 <Button variant=\"success\" type=\"submit\">\r\n    //                     Сохранить\r\n    //                 </Button>\r\n    //             </Card.Footer>\r\n    //         </Form>\r\n    //     </Card>\r\n    // )\r\n}"]},"metadata":{},"sourceType":"module"}