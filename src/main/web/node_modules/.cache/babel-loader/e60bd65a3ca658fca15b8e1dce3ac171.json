{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79639\\\\IdeaProjects\\\\Booktracker\\\\src\\\\main\\\\webapp\\\\booktracker-ui\\\\src\\\\components\\\\AddBook.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Row, Button, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      author_name: '',\n      book_name: ''\n    };\n\n    this.submitBook = event => {\n      alert(this.state.author_name);\n      event.preventDefault();\n      const book = {\n        author_name: this.state.author_name,\n        book_name: this.state.book_name\n      };\n      axios.post(\"http://localhost:8080/api/books/add-book\", book).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Book saved successfully!\");\n        }\n      });\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n  }\n\n  render() {\n    const {\n      author_name,\n      book_name\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"bordered border-dark bg-dark text-white\",\n      style: {\n        marginTop: 50,\n        marginBottom: 50,\n        marginLeft: 50,\n        marginRight: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.submitBook,\n        id: \"bookFormId\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridAuthor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"author_name\",\n              value: author_name,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridTitle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"book_name\",\n              value: book_name,\n              onChange: this.bookChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\",\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/79639/IdeaProjects/Booktracker/src/main/webapp/booktracker-ui/src/components/AddBook.js"],"names":["React","Component","axios","Card","Form","Row","Button","Col","AddBook","constructor","props","initialState","author_name","book_name","submitBook","event","alert","state","preventDefault","book","post","then","response","data","setState","bookChange","target","name","value","bind","render","marginTop","marginBottom","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Form, Row, Button, Col } from 'react-bootstrap'\r\n\r\nexport default class AddBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        author_name: '', book_name: ''\r\n    }\r\n\r\n    submitBook = event => {\r\n        alert(this.state.author_name)\r\n        event.preventDefault();\r\n    \r\n\r\n        const book = {\r\n            author_name : this.state.author_name,\r\n            book_name : this.state.book_name\r\n        };\r\n\r\n        axios.post(\"http://localhost:8080/api/books/add-book\", book)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book saved successfully!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {author_name, book_name} = this.state;\r\n        return (\r\n            <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n                <Card.Header>Add Book</Card.Header>\r\n                <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n                            <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                                <Form.Label>Автор</Form.Label>\r\n                                <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\" name=\"author_name\"\r\n                                    value={author_name}\r\n                                    onChange={this.bookChange}\r\n                                    placeholder=\"Введите автора книги\"\r\n                                    className={\"bg-dark text-white\"} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridTitle\">\r\n                                <Form.Label>Название книги</Form.Label>\r\n                                <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\" name=\"book_name\"\r\n                                    value={book_name}\r\n                                    onChange={this.bookChange}\r\n                                    placeholder=\"Введите название книги\"\r\n                                    className=\"bg-dark text-white\" />\r\n                            </Form.Group>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}