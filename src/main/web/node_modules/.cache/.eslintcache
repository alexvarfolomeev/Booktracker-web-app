[{"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\index.js":"1","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\reportWebVitals.js":"2","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\App.js":"3","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Navbar.js":"4","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Welcome.js":"5","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\UnreadBooks.js":"6","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\ReadBooks.js":"7","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\AddBook.js":"8","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Books.js":"9","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\BookEditing.js":"10"},{"size":550,"mtime":1631212162875,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1159,"mtime":1631217550126,"results":"14","hashOfConfig":"12"},{"size":877,"mtime":1631212725842,"results":"15","hashOfConfig":"12"},{"size":2207,"mtime":1630867781064,"results":"16","hashOfConfig":"12"},{"size":2076,"mtime":1630867315916,"results":"17","hashOfConfig":"12"},{"size":2051,"mtime":1630867283648,"results":"18","hashOfConfig":"12"},{"size":5006,"mtime":1631207342690,"results":"19","hashOfConfig":"12"},{"size":3670,"mtime":1631218855370,"results":"20","hashOfConfig":"12"},{"size":4447,"mtime":1631219126807,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l9sufp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\index.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\reportWebVitals.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\App.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Navbar.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Welcome.js",["46"],"import React, { Component } from 'react'\r\nimport { Carousel, Caption} from 'react-bootstrap'\r\n\r\nexport class WelcomePage extends Component {\r\n    render() {\r\n        return (\r\n            <Carousel>\r\n                <Carousel.Item style={{margin: 50}}>\r\n                    <img\r\n                        className=\"d-block w-100 text-black\"\r\n                        src=\"https://pbs.twimg.com/media/EnW5cTvXUAkacSY.jpg\"\r\n                        alt=\"First slide\"\r\n                        width=\"1200\" height=\"800\"/>\r\n                    <Carousel.Caption>\r\n                        <h3>Альберт Эйнштейн</h3>\r\n                        <p>\"Если вы хотите жить счастливой жизнью, привяжите ее к цели, а не к людям или вещам.\"</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item style={{margin: 50}}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://www.foicey.com/wp-content/uploads/2020/06/jjrr-min-1024x576.jpg\"\r\n                        alt=\"Second slide\"\r\n                        width=\"1200\" height=\"800\"/>\r\n\r\n                    <Carousel.Caption>\r\n                        <h3>Жан-Жак Руссо</h3>\r\n                        <p>\"Более полная жизнь не у того, кто прожил дольше, а у того, кто больше узнал.\"</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item style={{margin: 50}}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://i.sunhome.ru/journal/251/idealizm-v2.orig.jpg\"\r\n                        alt=\"Third slide\"\r\n                        width=\"1200\" height=\"800\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Платон</h3>\r\n                        <p>\"Книга - немой учитель.\"</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WelcomePage","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\UnreadBooks.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\ReadBooks.js",[],"C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\AddBook.js",["47","48"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap'\r\n\r\nexport default class AddBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    }\r\n\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            authorName: this.state.authorName,\r\n            bookName: this.state.bookName,\r\n            coverPicURL: this.state.coverPicURL,\r\n            bookStatus: this.state.bookStatus\r\n        };\r\n\r\n        axios.post(\"http://localhost:8080/api/books/add-book\", book)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book saved successfully!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { authorName, bookName, coverPicURL, bookStatus } = this.state;\r\n\r\n        const options = [\r\n            {value: 'Для прочтения', label: 'Для прочтения'},\r\n            {value: 'Прочитанная', label: 'Прочитанная'}\r\n        ];\r\n    \r\n        return (\r\n            <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n                <Card.Header>Добавить книгу</Card.Header>\r\n                <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n                        <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                            <Form.Label>Автор</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"authorName\"\r\n                                value={authorName}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Введите автора книги\"\r\n                                className={\"bg-dark text-white\"} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Название книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"bookName\"\r\n                                value={bookName}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Введите название книги\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Обложка книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"coverPicURL\"\r\n                                value={coverPicURL}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Добавьте URL картинки\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Статус книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"bookStatus\"\r\n                                value={bookStatus}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Выберите статус книги\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                        {/* <Form.Label style={{ marginTop: 10 }} placeholder=\"Добавьте URL картинки\" controlId=\"formGridSelect\">Статус книги</Form.Label>\r\n                        <Form.Select className={\"bg-dark text-white\"} \r\n                                onChange={this.bookChange}\r\n                                options = {options}/> */}\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\Books.js",["49","50","51"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Table, Image, ButtonGroup, Button, Modal } from 'react-bootstrap'\r\nimport Ripples from 'react-ripples'\r\n\r\n\r\nexport default class Books extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/api/books/show-all')\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({ books: data })\r\n            })\r\n    }\r\n\r\n    deleteBook = (bookId) => {\r\n        axios.delete('http://localhost:8080/api/books/delete-book/' + bookId)\r\n            .then(response => {\r\n                if (response != null) {\r\n                    alert('Book deleted successfully');\r\n                    this.setState({\r\n                        books: this.state.books.filter(book => book.id != bookId)\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n            return (\r\n                <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n                    <Card.Header>\r\n                        Список всех книг\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>id</th>\r\n                                    <th>Название книги</th>\r\n                                    <th>Автор</th>\r\n                                    <th>Статус</th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.books.map(\r\n                                        book =>\r\n                                            <tr key={book.id}>\r\n                                                <td>{book.id}</td>\r\n                                                <td> <Image src={book.coverPicURL} roundedCircle width=\"30\" hight=\"30\" /> {book.bookName}</td>\r\n                                                <td>{book.authorName}</td>\r\n                                                <td>{book.bookStatus}</td>\r\n                                                <td>\r\n                                                    <Ripples>\r\n                                                        <Button variant=\"outline-danger\" onClick={this.deleteBook.bind(this, book.id)}>Удалить</Button>\r\n                                                    </Ripples>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Ripples>\r\n                                                        <Button variant=\"outline-success\" href='/update-book'>Редактировать</Button>{' '}\r\n                                                    </Ripples>\r\n                                                </td>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                    <Card.Footer></Card.Footer>\r\n                </Card>\r\n            )\r\n        }\r\n    }","C:\\Users\\79639\\IdeaProjects\\Booktracker\\src\\main\\web\\src\\components\\BookEditing.js",["52"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Form, Button, Col, Select } from 'react-bootstrap'\r\n\r\n\r\nexport default class BookEditing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        authorName: '', bookName: '', coverPicURL: '', bookStatus: ''\r\n    }\r\n\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            authorName: this.state.authorName,\r\n            bookName: this.state.bookName,\r\n            coverPicURL: this.state.coverPicURL,\r\n            bookStatus: this.state.bookStatus\r\n        };\r\n\r\n        axios.post(\"http://localhost:8080/api/books/update-book\", book)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState(this.initialState);\r\n                    alert(\"Book updated successfully!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { authorName, bookName, coverPicURL, bookStatus } = this.state;\r\n    \r\n        return (\r\n            <Card className={\"bordered border-dark bg-dark text-white\"} style={{ marginTop: 50, marginBottom: 50, marginLeft: 50, marginRight: 50 }}>\r\n                <Card.Header>Изменить инфо о книге</Card.Header>\r\n                <Form onSubmit={this.submitBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n                        <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                            <Form.Label>Автор</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"authorName\"\r\n                                value={authorName}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Введите автора книги\"\r\n                                className={\"bg-dark text-white\"} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTitle\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Название книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"bookName\"\r\n                                value={bookName}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Введите название книги\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridCover\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Обложка книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"coverPicURL\"\r\n                                value={coverPicURL}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Добавьте URL картинки\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridStatus\" style={{ marginTop: 10 }}>\r\n                            <Form.Label>Статус книги</Form.Label>\r\n                            <Form.Control required autoComplete=\"off\"\r\n                                type=\"text\" name=\"bookStatus\"\r\n                                value={bookStatus}\r\n                                onChange={this.bookChange}\r\n                                placeholder=\"Выберите статус книги\"\r\n                                className=\"bg-dark text-white\" />\r\n                        </Form.Group>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}",{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":27},{"ruleId":"53","severity":1,"message":"57","line":3,"column":35,"nodeType":"55","messageId":"56","endLine":3,"endColumn":41},{"ruleId":"53","severity":1,"message":"58","line":47,"column":15,"nodeType":"55","messageId":"56","endLine":47,"endColumn":22},{"ruleId":"53","severity":1,"message":"59","line":3,"column":30,"nodeType":"55","messageId":"56","endLine":3,"endColumn":41},{"ruleId":"53","severity":1,"message":"60","line":3,"column":51,"nodeType":"55","messageId":"56","endLine":3,"endColumn":56},{"ruleId":"61","severity":1,"message":"62","line":30,"column":72,"nodeType":"63","messageId":"64","endLine":30,"endColumn":74},{"ruleId":"53","severity":1,"message":"57","line":3,"column":35,"nodeType":"55","messageId":"56","endLine":3,"endColumn":41},"no-unused-vars","'Caption' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'options' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'Modal' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]